---
- name: create_vpc
  hosts: localhost
  connection: local
  gather_facts: false
  pre_tasks:
    - include_vars: vars/main.yml
  tasks:

    - name: Create VPC
      ec2_vpc_net:
        name: "{{ ec2_vpc_name }}-vpc"
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ aws_region }}"
        tags: 
          Name: "{{ ec2_vpc_name }}-vpc"
        state: present
      register: my_vpc


    - name: sleep for 10 seconds and continue with play
      wait_for: timeout=10
      delegate_to: localhost

    - name: Set VPC ID in variable
      set_fact:
        ec2_vpc_id: "{{ my_vpc.vpc.id }}"

    - name: Create Public Subnet
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ ec2_vpc_id }}"
        cidr: "{{ public_subnet_1_cidr }}"
        az: "{{ aws_region }}a"
        region: "{{ aws_region }}"
        resource_tags:
          Name: "Public Subnet"
      register: my_public_subnet

    # We save the id of the Public Subnet in a new variable.

    - name: Set Public Subnet ID in variable
      set_fact:
        public_subnet_id: "{{ my_public_subnet.subnet.id }}"


    # Every VPC needs at least one Internet Gateway.
    # This component allows traffic between the VPC and the outside world.

    - name: Create Internet Gateway for VPC
      ec2_vpc_igw:
        vpc_id: "{{ ec2_vpc_id }}"
        region: "{{ aws_region }}"
        state: present
      register: my_vpc_igw


    # We save the id of the Internet Gateway in a new variable.

    - name: Set Internet Gateway ID in variable
      set_fact:
        igw_id: "{{ my_vpc_igw.gateway_id }}"


    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ ec2_vpc_id }}"
        region: "{{ aws_region }}"
        tags:
          Name: "{{ec2_vpc_name}}-rt"
        routes:
          - dest: "0.0.0.0/0"
            gateway_id: "{{ igw_id }}"

    - name: Create Main Security Group
      ec2_group:
        name: "{{ ec2_vpc_name }}-sg"
        description: My Security Group
        vpc_id: "{{ ec2_vpc_id }}"
        region: "{{ aws_region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ my_ip_range }}"
      register: my_vpc_sg

    - name: Set Security Group ID in variable
      set_fact:
        sg_id: "{{ my_vpc_sg.group_id }}"

  